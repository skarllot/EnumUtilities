// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Raiqub.Generators.EnumUtilities.CodeWriters
{
    using Common;
    using Models;
    using System.Text;
    using T4CodeWriter;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EnumInfoWriter : CodeWriterBase<EnumToGenerate>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n// <auto-generated />\r\n#nullable enable\r\n\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing Raiqub.Generators.EnumUtilities.Formatters;\r\nusing Raiqub.Generators.EnumUtilities.Parsers;\r\n\r\n#pragma warning disable CS1591 // publicly visible type or member must be documented\r\n\r\n");
            
            #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            if (!string.IsNullOrEmpty(Model.Namespace))
            {
                WriteLine($"namespace {Model.Namespace}");
                WriteLine("{");
                PushIndent();
            }

            
            #line default
            #line hidden
            this.Write("[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"");
            
            #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CurrentAssemblyName.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Append($"{CurrentAssemblyName.Version}")));
            
            #line default
            #line hidden
            this.Write("\")]\r\n");
            
            #line 27 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IsPublic ? "public" : "internal"));
            
            #line default
            #line hidden
            this.Write(" static partial class ");
            
            #line 27 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.MetadataClassName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 29 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            WriteDefaultBlock();

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 33 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            if (!string.IsNullOrEmpty(Model.Namespace))
            {
                PopIndent();
                WriteLine("}");
            }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

    private static readonly Encoding _utf8Encoding = Encoding.UTF8;

    private void WriteDefaultBlock()
    {
        if (!HasMainGenerator)
            return;

        
        #line default
        #line hidden
        
        #line 9 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    /// <summary>Provides constant values for <see cref=\"");

        
        #line default
        #line hidden
        
        #line 9 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 9 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> members names.</summary>\r\n    public static partial class Name\r\n    {\r\n        /// <summary>Represents the largest possible number of characters produced by converting an <see cref=\"");

        
        #line default
        #line hidden
        
        #line 12 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 12 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value to string, based on defined members. This field is constant.</summary>\r\n        public const int MaxCharsLength = ");

        
        #line default
        #line hidden
        
        #line 13 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.Max(x => x.MemberName.Length)));

        
        #line default
        #line hidden
        
        #line 13 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 14 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        /// <summary>The string representation of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> name.</summary>\r\n        public const string ");

        
        #line default
        #line hidden
        
        #line 20 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 20 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" = \"");

        
        #line default
        #line hidden
        
        #line 20 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 20 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\";\r\n");

        
        #line default
        #line hidden
        
        #line 21 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 24 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    }\r\n\r\n    /// <summary>Provides static values for <see cref=\"");

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> UTF-8 encoded members names.</summary>\r\n    public static partial class Utf8Name\r\n    {\r\n        /// <summary>Represents the largest possible number of bytes produced by converting an <see cref=\"");

        
        #line default
        #line hidden
        
        #line 29 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 29 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value to UTF-8 string, based on defined members. This field is constant.</summary>\r\n        public const int MaxBytesLength = ");

        
        #line default
        #line hidden
        
        #line 30 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.Max(x => _utf8Encoding.GetByteCount(x.MemberName))));

        
        #line default
        #line hidden
        
        #line 30 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        /// <summary>The UTF-8 representation of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> name.</summary>\r\n        public static ReadOnlySpan<byte> ");

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" => new byte[");

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(_utf8Encoding.GetByteCount(curr.MemberName)));

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("] { ");

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(_utf8Encoding.GetBytes(curr.MemberName).JoinToString()));

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" };\r\n");

        
        #line default
        #line hidden
        
        #line 38 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 41 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    }\r\n");

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        if (HasMainGenerator && Model.HasSerializationValue)
        {

        
        #line default
        #line hidden
        
        #line 47 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n    /// <summary>Provides constant values for <see cref=\"");

        
        #line default
        #line hidden
        
        #line 47 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 47 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> serialized members values.</summary>\r\n    public static partial class SerializedValue\r\n    {\r\n        /// <summary>Represents the largest possible number of characters produced by converting an <see cref=\"");

        
        #line default
        #line hidden
        
        #line 50 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 50 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value to string, based on defined members. This field is constant.</summary>\r\n        public const int MaxCharsLength = ");

        
        #line default
        #line hidden
        
        #line 51 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.Max(x => x.ResolvedSerializedValue.Length)));

        
        #line default
        #line hidden
        
        #line 51 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 52 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        /// <summary>The string representation of serialized <see cref=\"");

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value.</summary>\r\n        public const string ");

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" = \"");

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.ResolvedSerializedValue));

        
        #line default
        #line hidden
        
        #line 58 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\";\r\n");

        
        #line default
        #line hidden
        
        #line 59 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 62 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    }\r\n\r\n    /// <summary>Provides static values for <see cref=\"");

        
        #line default
        #line hidden
        
        #line 64 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 64 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> UTF-8 encoded members serialized values.</summary>\r\n    public static partial class Utf8SerializedValue\r\n    {\r\n        /// <summary>Represents the largest possible number of bytes produced by converting an <see cref=\"");

        
        #line default
        #line hidden
        
        #line 67 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 67 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value to UTF-8 string, based on defined members. This field is constant.</summary>\r\n        public const int MaxBytesLength = ");

        
        #line default
        #line hidden
        
        #line 68 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.Max(x => _utf8Encoding.GetByteCount(x.ResolvedSerializedValue))));

        
        #line default
        #line hidden
        
        #line 68 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        /// <summary>The UTF-8 representation of serialized <see cref=\"");

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value.</summary>\r\n        public static ReadOnlySpan<byte> ");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" => new byte[");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(_utf8Encoding.GetByteCount(curr.ResolvedSerializedValue)));

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("] { ");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(_utf8Encoding.GetBytes(curr.ResolvedSerializedValue).JoinToString()));

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" };\r\n");

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    }\r\n");

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }
        WriteLine();
    }

        
        #line default
        #line hidden
        
        #line 40 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

    public EnumInfoWriter(StringBuilder builder) : base(builder)
    {
    }

    private bool HasMainGenerator => (Model.SelectedGenerators & SelectedGenerators.MainGenerator) ==
                                       SelectedGenerators.MainGenerator;

    public override string GetFileName() => $"{Model.Namespace ?? "_"}.{Model.Name}EnumInfo.g.cs";

    protected override bool CanGenerateFor(EnumToGenerate model) =>
        model.SelectedGenerators != 0;

        
        #line default
        #line hidden
    }
    
}
