// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Raiqub.Generators.EnumUtilities.CodeWriters
{
    using Common;
    using Models;
    using System.Text;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class EnumInfoWriter : CodeWriterBase<EnumToGenerate>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            this.Write("\r\n");
            this.Write("\r\n// <auto-generated />\r\n#nullable enable\r\n\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\nusing Raiqub.Generators.EnumUtilities.Formatters;\r\nusing Raiqub.Generators.EnumUtilities.Parsers;\r\n\r\n#pragma warning disable CS1591 // publicly visible type or member must be documented\r\n\r\n");
            
            #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            if (!string.IsNullOrEmpty(Model.Namespace))
            {
                WriteLine($"namespace {Model.Namespace}");
                WriteLine("{");
                PushIndent();
            }

            
            #line default
            #line hidden
            this.Write("[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\r\n[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"");
            
            #line 27 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CurrentAssemblyName.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 27 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Append($"{CurrentAssemblyName.Version}")));
            
            #line default
            #line hidden
            this.Write("\")]\r\n");
            
            #line 28 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.IsPublic ? "public" : "internal"));
            
            #line default
            #line hidden
            this.Write(" static partial class ");
            
            #line 28 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            
            #line default
            #line hidden
            this.Write("EnumInfo\r\n{\r\n");
            
            #line 30 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            WriteDefaultBlock();
            WriteExtensionsBlock();
            WriteFactoryBlock();

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

            if (!string.IsNullOrEmpty(Model.Namespace))
            {
                PopIndent();
                WriteLine("}");
            }

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

    private void WriteDefaultBlock()
    {
        if ((Model.SelectedGenerators & SelectedGenerators.MainGenerator) != SelectedGenerators.MainGenerator)
            return;

        
        #line default
        #line hidden
        
        #line 7 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("    /// <summary>Provides constant values for <see cref=\"");

        
        #line default
        #line hidden
        
        #line 7 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 7 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> names.</summary>\r\n    public static partial class Name\r\n    {\r\n        /// <summary>Represents the largest possible number of characters produced by converting an <see cref=\"");

        
        #line default
        #line hidden
        
        #line 10 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 10 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> value to string, based on defined members. This field is constant.</summary>\r\n        public const int MaxCharsLength = ");

        
        #line default
        #line hidden
        
        #line 11 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.Max(x => x.MemberName.Length)));

        
        #line default
        #line hidden
        
        #line 11 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 12 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        /// <summary>The string representation of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> name.</summary>\r\n        public const string ");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(" = \"");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\";\r\n");

        
        #line default
        #line hidden
        
        #line 19 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\r\n        private static string[]? s_names;\r\n\r\n        /// <summary>Retrieves the names of the constants in <see cref=\"");

        
        #line default
        #line hidden
        
        #line 25 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 25 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" /> enumeration.</summary>\r\n        /// <returns>The names of the constants in <see cref=\"");

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\" />.</returns>\r\n        public static ReadOnlyMemory<string> GetNames()\r\n        {\r\n            return s_names ??= new string[]\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 35 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("                \"");

        
        #line default
        #line hidden
        
        #line 35 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 35 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("\",\r\n");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"
this.Write("            };\r\n        }\r\n    }\r\n");

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\DefaultBlock.ttinclude"

        WriteLine();
    }

        
        #line default
        #line hidden
        
        #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

    private void WriteExtensionsBlock()
    {

        
        #line default
        #line hidden
        
        #line 5 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("    /// <summary>Provides support for formatting <see cref=\"");

        
        #line default
        #line hidden
        
        #line 5 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 5 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\"/> values.</summary>\r\n    public sealed partial class StringFormatter : IEnumFormatter<");

        
        #line default
        #line hidden
        
        #line 6 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 6 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(">\r\n    {\r\n        /// <summary>Gets the singleton instance of the <see cref=\"StringFormatter\"/> class.</summary>\r\n        public static StringFormatter Instance = new StringFormatter();\r\n\r\n        /// <inheritdoc />\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n        public int GetStringLengthForNumber(");

        
        #line default
        #line hidden
        
        #line 13 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 13 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value) => EnumNumericFormatter.GetStringLength(value);\r\n\r\n        /// <inheritdoc />\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n        public string GetStringForNumber(");

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 17 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value) => value.ToString();\r\n");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

        if (Model.IsFlags)
        {

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\r\n        /// <inheritdoc />\r\n        public int? TryGetStringLengthForMember(");

        
        #line default
        #line hidden
        
        #line 24 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 24 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value)\r\n        {\r\n            if (value == 0)\r\n            {\r\n                return ");

        
        #line default
        #line hidden
        
        #line 28 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.FirstOrDefault(x => x.MemberValue == "0")?.MemberName.Length ?? 1));

        
        #line default
        #line hidden
        
        #line 29 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(";\r\n            }\r\n\r\n            int count = 0, foundItemsCount = 0;\r\n");

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            foreach (
                var curr in
                    Model.UniqueValues.OrderByDescending(x => x.RealMemberValue).Where(x => x.MemberValue != "0"))
            {

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("            if ((value & ");

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(") == ");

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 39 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(")\r\n            {\r\n                value -= ");

        
        #line default
        #line hidden
        
        #line 41 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 41 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(";\r\n                count = checked(count + ");

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName.Length));

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(");\r\n                foundItemsCount++;\r\n            }\r\n");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 49 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\r\n            if (value != 0)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            const int separatorStringLength = 2;\r\n            return checked(count + (separatorStringLength * (foundItemsCount - 1)));\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public string? TryGetStringForMember(");

        
        #line default
        #line hidden
        
        #line 59 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 59 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value)\r\n        {\r\n            if (value == 0)\r\n            {\r\n                return \"");

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Values.FirstOrDefault(x => x.MemberValue == "0")?.MemberName ?? "0"));

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\";\r\n            }\r\n\r\n            Span<");

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("> foundItems = stackalloc ");

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("[");

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(GetMappedBitCount()));

        
        #line default
        #line hidden
        
        #line 66 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("];\r\n            int count = 0, foundItemsCount = 0;\r\n");

        
        #line default
        #line hidden
        
        #line 68 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            foreach (
                var curr in
                    Model.UniqueValues.OrderByDescending(x => x.RealMemberValue).Where(x => x.MemberValue != "0"))
            {

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("            if ((value & ");

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(") == ");

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(")\r\n            {\r\n                value -= ");

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 76 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(";\r\n                count = checked(count + ");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName.Length));

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(");\r\n                foundItems[foundItemsCount++] = ");

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 78 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(";\r\n            }\r\n");

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 84 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\r\n            if (value != 0)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (foundItemsCount == 1)\r\n            {\r\n                return GetStringForSingleMember(foundItems[0]);\r\n            }\r\n\r\n            return WriteMultipleFoundFlagsNames(count, foundItemsCount, foundItems);\r\n        }\r\n\r\n        private string WriteMultipleFoundFlagsNames(int count, int foundItemsCount, Span<");

        
        #line default
        #line hidden
        
        #line 97 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 97 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("> foundItems)\r\n        {\r\n            const int separatorStringLength = 2;\r\n            const char enumSeparatorChar = ',';\r\n            var strlen = checked(count + (separatorStringLength * (foundItemsCount - 1)));\r\n            Span<char> result = strlen <= 128\r\n                ? stackalloc char[128].Slice(0, strlen)\r\n                : new char[strlen];\r\n            var span = result;\r\n\r\n            string name = GetStringForSingleMember(foundItems[--foundItemsCount]);\r\n            name.AsSpan().CopyTo(span);\r\n            span = span.Slice(name.Length);\r\n            while (--foundItemsCount >= 0)\r\n            {\r\n                span[0] = enumSeparatorChar;\r\n                span[1] = ' ';\r\n                span = span.Slice(2);\r\n\r\n                name = GetStringForSingleMember(foundItems[foundItemsCount]);\r\n                name.CopyTo(span);\r\n                span = span.Slice(name.Length);\r\n            }\r\n\r\n            return result.ToString();\r\n        }\r\n\r\n        private string GetStringForSingleMember(");

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 124 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value)\r\n        {\r\n            return value switch\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 128 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            foreach (var curr in Model.UniqueValues)
            {

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                ");

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" => \"");

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\",\r\n");

        
        #line default
        #line hidden
        
        #line 133 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 136 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                _ => throw new ArgumentOutOfRangeException()\r\n            };\r\n        }\r\n");

        
        #line default
        #line hidden
        
        #line 139 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

        }
        else
        {

        
        #line default
        #line hidden
        
        #line 145 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\r\n        /// <inheritdoc />\r\n        public int? TryGetStringLengthForMember(");

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value)\r\n        {\r\n            return value switch\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            foreach (var curr in Model.UniqueValues)
            {

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                ");

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" => ");

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName.Length));

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(",\r\n");

        
        #line default
        #line hidden
        
        #line 155 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 158 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                _ => null\r\n            };\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public string? TryGetStringForMember(");

        
        #line default
        #line hidden
        
        #line 163 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 163 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" value)\r\n        {\r\n            return value switch\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 167 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            foreach (var curr in Model.UniqueValues)
            {

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                ");

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(" => \"");

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("\",\r\n");

        
        #line default
        #line hidden
        
        #line 172 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 175 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("                _ => null\r\n            };\r\n        }\r\n");

        
        #line default
        #line hidden
        
        #line 178 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 181 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"
this.Write("    }\r\n");

        
        #line default
        #line hidden
        
        #line 182 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\ExtensionsBlock.ttinclude"

    }

    private int GetBitCount() => Model.UnderlyingType switch {
        "byte" => 8,
        "sbyte" => 8,
        "short" => 16,
        "ushort" => 16,
        "int" => 32,
        "uint" => 32,
        "long" => 64,
        "ulong" => 64,
        _ => 64,
        };

    private int GetMappedBitCount()
    {
        if (Model.Values.Any(x => x.MemberValue[0] == '-'))
            return GetBitCount();

        return GetBitCount() -
               (BitOperations.LeadingZeroCount(Model.Values.Select(x => Convert.ToUInt64(x.RealMemberValue)).Max()) -
                (64 - GetBitCount()));
    }

        
        #line default
        #line hidden
        
        #line 1 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

    private void WriteFactoryBlock()
    {
        bool enableDescription = (Model.SelectedGenerators & SelectedGenerators.MainGenerator) ==
                                 SelectedGenerators.MainGenerator && Model.HasDescription;

        
        #line default
        #line hidden
        
        #line 8 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\r\n    /// <summary>Provides support for parsing <see cref=\"");

        
        #line default
        #line hidden
        
        #line 8 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.Name));

        
        #line default
        #line hidden
        
        #line 8 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\"/> values.</summary>\r\n    public sealed partial class StringParser\r\n        : IEnumParser<");

        
        #line default
        #line hidden
        
        #line 10 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 10 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(">");

        
        #line default
        #line hidden
        
        #line 10 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(enableDescription ? Append($", IEnumDescriptionParser<{Model.UnderlyingType}>") : new None()));

        
        #line default
        #line hidden
        
        #line 11 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\r\n    {\r\n        /// <summary>Gets the singleton instance of the <see cref=\"StringParser\"/> class.</summary>\r\n        public static StringParser Instance = new StringParser();\r\n\r\n        /// <inheritdoc />\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n        public ");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" BitwiseOr(");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" value1, ");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" value2) => unchecked((");

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 18 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(")(value1 | value2));\r\n\r\n        /// <inheritdoc />\r\n        public bool TryParseNumber(ReadOnlySpan<char> value, out ");

        
        #line default
        #line hidden
        
        #line 21 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 21 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result) => EnumNumericParser.TryParse(value, out result);\r\n\r\n        /// <inheritdoc />\r\n        public bool TryParseSingleName(ReadOnlySpan<char> value, bool ignoreCase, out ");

        
        #line default
        #line hidden
        
        #line 24 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 24 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result)\r\n        {\r\n            return ignoreCase\r\n                ? TryParse(value, out result)\r\n                : TryParse(value, StringComparison.OrdinalIgnoreCase, out result);\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public bool TryParseSingleName(ReadOnlySpan<char> value, StringComparison comparisonType, out ");

        
        #line default
        #line hidden
        
        #line 32 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 32 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result)\r\n        {\r\n            return TryParse(value, comparisonType, out result);\r\n        }\r\n");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        if (enableDescription)
        {

        
        #line default
        #line hidden
        
        #line 41 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\r\n        /// <inheritdoc />\r\n        public bool TryParseDescription(ReadOnlySpan<char> value, StringComparison comparisonType, out ");

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result)\r\n        {\r\n");

        
        #line default
        #line hidden
        
        #line 44 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

            if (Model.Values.All(x => x.Description == null))
            {

        
        #line default
        #line hidden
        
        #line 48 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("            result = default;\r\n            return false;\r\n");

        
        #line default
        #line hidden
        
        #line 50 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

            }
            else
            {

        
        #line default
        #line hidden
        
        #line 55 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("            switch (value)\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 57 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

                foreach (var curr in Model.Values.Where(x => x.Description != null))
                {

        
        #line default
        #line hidden
        
        #line 61 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                case { } s when s.Equals(\"");

        
        #line default
        #line hidden
        
        #line 61 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.Description));

        
        #line default
        #line hidden
        
        #line 61 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\", comparisonType):\r\n                    result = ");

        
        #line default
        #line hidden
        
        #line 62 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 62 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(";\r\n                    return true;\r\n");

        
        #line default
        #line hidden
        
        #line 64 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

                }

        
        #line default
        #line hidden
        
        #line 67 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                default:\r\n                    result = default;\r\n                    return false;\r\n            }\r\n");

        
        #line default
        #line hidden
        
        #line 71 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

            }

        
        #line default
        #line hidden
        
        #line 74 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("        }\r\n");

        
        #line default
        #line hidden
        
        #line 75 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\r\n        private bool TryParse(ReadOnlySpan<char> value, out ");

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result)\r\n        {\r\n            switch (value)\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 87 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                case { } when value.SequenceEqual(\"");

        
        #line default
        #line hidden
        
        #line 87 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 87 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\"):\r\n                    result = ");

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 88 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(";\r\n                    return true;\r\n");

        
        #line default
        #line hidden
        
        #line 90 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                default:\r\n                    result = 0;\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        private bool TryParse(ReadOnlySpan<char> value, StringComparison comparisonType, out ");

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(Model.UnderlyingType));

        
        #line default
        #line hidden
        
        #line 99 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(" result)\r\n        {\r\n            switch (value)\r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 103 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        foreach (var curr in Model.Values)
        {

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                case { } when value.Equals(\"");

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberName));

        
        #line default
        #line hidden
        
        #line 107 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("\", comparisonType):\r\n                    result = ");

        
        #line default
        #line hidden
        
        #line 108 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(this.ToStringHelper.ToStringWithCulture(curr.MemberValue));

        
        #line default
        #line hidden
        
        #line 108 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write(";\r\n                    return true;\r\n");

        
        #line default
        #line hidden
        
        #line 110 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

        }

        
        #line default
        #line hidden
        
        #line 113 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"
this.Write("                default:\r\n                    result = 0;\r\n                    return false;\r\n            }\r\n        }\r\n    }\r\n");

        
        #line default
        #line hidden
        
        #line 119 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfo\FactoryBlock.ttinclude"

    }

        
        #line default
        #line hidden
        
        #line 43 "C:\Users\skarl\source\repos\github\skarllot\EnumUtilities\gen\EnumUtilities.Generators\CodeWriters\EnumInfoWriter.tt"

    public EnumInfoWriter(StringBuilder builder) : base(builder)
    {
    }

    public override string GetFileName() => $"{Model.Namespace ?? "_"}.{Model.Name}EnumInfo.g.cs";

    protected override bool CanGenerateFor(EnumToGenerate model) =>
        model.SelectedGenerators != 0;

        
        #line default
        #line hidden
    }
    
}
