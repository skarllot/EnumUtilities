//HintName: ColourFactory.g.cs
// <auto-generated />
#nullable enable

using System;
using System.Diagnostics.CodeAnalysis;

#pragma warning disable CS1591 // publicly visible type or member must be documented

namespace TestNamespace
{
    public static partial class ColourFactory
    {
        public static bool TryParse(
            [NotNullWhen(true)] string? name,
            StringComparison comparisonType,
            out Colour result)
        {
            switch (name)
            {
                case { } s when s.Equals(nameof(Colour.Red), comparisonType):
                    result = Colour.Red;
                    return true;
                case { } s when s.Equals(nameof(Colour.Blue), comparisonType):
                    result = Colour.Blue;
                    return true;
                case { } s when Int32.TryParse(s, out var val):
                    result = (Colour)val;
                    return true;
                default:
                    result = default;
                    return false;
            }
        }

        public static bool TryParseIgnoreCase(
            [NotNullWhen(true)] string? name,
            out Colour result)
        {
            return TryParse(name, StringComparison.OrdinalIgnoreCase, out result);
        }

        public static bool TryParse(
            [NotNullWhen(true)] string? name,
            out Colour result)
        {
            switch (name)
            {
                case nameof(Colour.Red):
                    result = Colour.Red;
                    return true;
                case nameof(Colour.Blue):
                    result = Colour.Blue;
                    return true;
                case { } s when Int32.TryParse(s, out var val):
                    result = (Colour)val;
                    return true;
                default:
                    result = default;
                    return false;
            }
        }

        public static Colour[] GetValues()
        {
            return new[]
            {
                Colour.Red,
                Colour.Blue,
            };
        }

        public static string[] GetNames()
        {
            return new[]
            {
                nameof(Colour.Red),
                nameof(Colour.Blue),
            };
        }
    }
}
