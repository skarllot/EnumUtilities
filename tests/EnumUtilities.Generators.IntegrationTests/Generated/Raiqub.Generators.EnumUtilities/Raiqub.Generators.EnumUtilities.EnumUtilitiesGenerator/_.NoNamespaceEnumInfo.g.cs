// <auto-generated />
#nullable enable

using System;
using System.Runtime.CompilerServices;
using Raiqub.Generators.EnumUtilities.Formatters;

#pragma warning disable CS1591 // publicly visible type or member must be documented

[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute("Raiqub.Generators.EnumUtilities", "1.8.0.0")]
public static partial class NoNamespaceEnumInfo
{
    /// <summary>Represents the largest possible number of characters produced by converting an <see cref="NoNamespace" /> value to string, based on defined members. This field is constant.</summary>
    public const int NameMaxCharsLength = 4;

    /// <summary>Provides support for formatting <see cref="NoNamespace"/> values.</summary>
    public sealed partial class StringFormatter : IEnumFormatter<int>
    {
        /// <summary>Gets the singleton instance of the <see cref="StringFormatter"/> class.</summary>
        public static StringFormatter Instance = new StringFormatter();

        /// <inheritdoc />
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public int GetStringCountForNumber(int value) => EnumNumericFormatter.GetStringLength(value);

        /// <inheritdoc />
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public string GetStringForNumber(int value) => value.ToString();

        /// <inheritdoc />
        public int? TryGetStringCountForMember(int value)
        {
            return value switch
            {
                0 => 4,
                1 => 3,
                2 => 3,
                _ => null
            };
        }

        /// <inheritdoc />
        public string? TryGetStringForMember(int value)
        {
            return value switch
            {
                0 => "Zero",
                1 => "One",
                2 => "Two",
                _ => null
            };
        }
    }
}
