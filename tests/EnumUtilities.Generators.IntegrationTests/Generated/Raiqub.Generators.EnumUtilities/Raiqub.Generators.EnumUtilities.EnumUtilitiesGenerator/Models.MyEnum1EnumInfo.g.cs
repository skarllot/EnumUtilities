// <auto-generated />
#nullable enable

using System;
using System.Runtime.CompilerServices;
using Raiqub.Generators.EnumUtilities.Formatters;
using Raiqub.Generators.EnumUtilities.Parsers;

#pragma warning disable CS1591 // publicly visible type or member must be documented

namespace Raiqub.Generators.EnumUtilities.IntegrationTests.Models
{
    /// <summary>Provides metadata for <see cref="MyEnum1" /> enumeration.</summary>
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Raiqub.Generators.EnumUtilities", "1.12.0.0")]
    internal static partial class MyEnum1Metadata
    {
        /// <summary>Provides constant values for <see cref="MyEnum1" /> members names.</summary>
        public static partial class Name
        {
            /// <summary>Represents the largest possible number of characters produced by converting a <see cref="MyEnum1" /> value to string, based on defined members.</summary>
            public const int MaxCharsLength = 4;

            /// <summary>The string representation of <see cref="MyEnum1.Zero" /> name.</summary>
            public const string Zero = "Zero";

            /// <summary>The string representation of <see cref="MyEnum1.One" /> name.</summary>
            public const string One = "One";

            /// <summary>The string representation of <see cref="MyEnum1.Two" /> name.</summary>
            public const string Two = "Two";
        }

        /// <summary>Provides static values for <see cref="MyEnum1" /> UTF-8 encoded members names.</summary>
        public static partial class Utf8Name
        {
            /// <summary>Represents the largest possible number of bytes produced by converting a <see cref="MyEnum1" /> value to UTF-8 string, based on defined members.</summary>
            public const int MaxBytesLength = 4;

            /// <summary>The UTF-8 representation of <see cref="MyEnum1.Zero" /> name.</summary>
            public static ReadOnlySpan<byte> Zero => new byte[4] { 90, 101, 114, 111 };

            /// <summary>The UTF-8 representation of <see cref="MyEnum1.One" /> name.</summary>
            public static ReadOnlySpan<byte> One => new byte[3] { 79, 110, 101 };

            /// <summary>The UTF-8 representation of <see cref="MyEnum1.Two" /> name.</summary>
            public static ReadOnlySpan<byte> Two => new byte[3] { 84, 119, 111 };
        }
    }
}
